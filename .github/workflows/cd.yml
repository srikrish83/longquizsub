name: CD Pipeline

# Trigger deployment only when CI Pipeline completes successfully
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted  # This runs on your AWS EC2 instance

    steps:
      - name: Clean up disk space
        run: |
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          sudo rm -rf /usr/local/lib/python3.10/site-packages/*

      - name: Stop & Remove Existing Container
        run: |
          sudo docker stop bike_sharing_api-container || true
          sudo docker rm -f bike_sharing_api-container || true

      - name: Remove Old Docker Images
        run: |
          # Remove the specific image if it exists
          sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/bike_sharing_api:latest || true
          
          # Remove all dangling images (untagged images)
          sudo docker image prune -f
          
          # Remove unused images (not just dangling ones)
          sudo docker image prune -a -f
          
          # Remove unused containers
          sudo docker container prune -f
          
          # Remove unused networks
          sudo docker network prune -f
          
          # Remove unused volumes (be careful with this if you have important data in volumes)
          # sudo docker volume prune -f

      - name: Pull Latest Docker Image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/bike_sharing_api:latest

      - name: Run New Docker Container
        run: |
          sudo docker run -it -d -p 8000:8000 --name bike_sharing_api-container \
          ${{ secrets.DOCKER_USERNAME }}/bike_sharing_api:latest

      - name: Verify Running Container
        run: |
          sudo docker ps -a
          echo "Checking container health..."
          sleep 5  # Give container time to start
          curl -f http://localhost:8000/health || exit 1